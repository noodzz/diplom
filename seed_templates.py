from database.operations import (
    create_project_template, add_task_template,
    add_task_template_dependency, init_db
)


def seed_project_templates():
    """Создает базовые шаблоны проектов."""

    # Шаблон "ОК 1 поток"
    template_id = create_project_template(
        name="ОК 1 поток",
        description="Базовый шаблон для создания одного потока онлайн-курса"
    )

    # Добавляем задачи для шаблона
    task_ids = {}

    # Создаем задачи (название, длительность, должность, порядок)
    tasks = [
        ("Расчёт стоимостей", 3, "Проектный менеджер", 1),
        ("Создание тарифов обучения", 1, "Технический специалист", 2),
        ("Создание продуктовых типов и продуктов", 2, "Старший тех. специалист", 3),
        ("Создание потоков обучения", 2, "Старший тех. специалист", 4),
        ("Создание тарифов для внешнего сайта", 1, "Старший тех. специалист", 5),
        ("Создание продуктовых страниц для внешнего сайта", 1, "Старший тех. специалист", 6),
        ("Создание продуктовых типов для внешнего сайта", 1, "Старший тех. специалист", 7),
        ("Сборка и загрузка образовательных программ", 2, "Технический специалист", 8),
        ("Создание настроек групп учеников", 1, "Руководитель настройки", 9),
        ("Создание пакетных предложений", 1, "Старший тех. специалист", 10),
        ("Создание комплектов курсов", 1, "Старший тех. специалист", 11),
        ("Создание связей с подарочными курсами", 1, "Технический специалист", 12),
        ("Настройка порядка карточек в каталоге", 1, "Технический специалист", 13),
        ("Настройка актуального месяца покупки", 1, "Старший тех. специалист", 14),
        ("Импорт академических часов", 2, "Технический специалист", 15),
        ("Постконтроль созданных объектов", 2, "Руководитель настройки", 16),
        ("Создание модулей обучения", 2, "Руководитель контента", 17),
        ("Создание уровней обучения", 2, "Руководитель контента", 18),
        ("Настройка связей между потоками и модулями", 1, "Старший специалист", 19),
        ("Настройка связей между потоками и уровнями", 1, "Старший специалист", 20),
        ("Сборка сводной таблицы для создания занятий", 7, "Старший специалист", 21),
        ("Создание занятий и домашних заданий", 3, "Руководитель контента", 22),
        ("Создание связей между уроками и модулями", 1, "Старший специалист", 23),
        ("Создание связей продукт-урок-уровень", 2, "Старший специалист", 24),
        ("Наполнение контентом занятий и домашних заданий", 3, "Младший специалист", 25),
        ("Постконтроль созданных уроков", 7, "Младший специалист", 26)
    ]

    # Добавляем задачи в шаблон
    for name, duration, position, order in tasks:
        task_id = add_task_template(template_id, name, duration, position, order)
        task_ids[name] = task_id

    # Добавляем зависимости между задачами
    dependencies = [
        ("Создание тарифов обучения", "Расчёт стоимостей"),
        ("Создание продуктовых типов и продуктов", "Создание тарифов обучения"),
        ("Создание потоков обучения", "Создание продуктовых типов и продуктов"),
        ("Создание тарифов для внешнего сайта", "Создание тарифов обучения"),
        ("Создание продуктовых страниц для внешнего сайта", "Создание продуктовых типов и продуктов"),
        ("Создание продуктовых типов для внешнего сайта", "Создание продуктовых типов и продуктов"),
        ("Сборка и загрузка образовательных программ", "Создание продуктовых типов для внешнего сайта"),
        ("Создание настроек групп учеников", "Создание продуктовых типов и продуктов"),
        ("Создание пакетных предложений", "Создание потоков обучения"),
        ("Создание комплектов курсов", "Создание пакетных предложений"),
        ("Создание связей с подарочными курсами", "Создание пакетных предложений"),
        ("Настройка порядка карточек в каталоге", "Создание продуктовых типов и продуктов"),
        ("Настройка актуального месяца покупки", "Создание потоков обучения"),
        ("Импорт академических часов", "Создание потоков обучения"),
        ("Постконтроль созданных объектов", "Создание тарифов для внешнего сайта"),
        ("Постконтроль созданных объектов", "Создание продуктовых страниц для внешнего сайта"),
        ("Постконтроль созданных объектов", "Сборка и загрузка образовательных программ"),
        ("Постконтроль созданных объектов", "Создание настроек групп учеников"),
        ("Постконтроль созданных объектов", "Создание комплектов курсов"),
        ("Постконтроль созданных объектов", "Создание связей с подарочными курсами"),
        ("Постконтроль созданных объектов", "Настройка порядка карточек в каталоге"),
        ("Постконтроль созданных объектов", "Настройка актуального месяца покупки"),
        ("Постконтроль созданных объектов", "Импорт академических часов"),
        ("Настройка связей между потоками и модулями", "Создание потоков обучения"),
        ("Настройка связей между потоками и модулями", "Создание модулей обучения"),
        ("Настройка связей между потоками и уровнями", "Создание потоков обучения"),
        ("Настройка связей между потоками и уровнями", "Создание уровней обучения"),
        ("Сборка сводной таблицы для создания занятий", "Настройка связей между потоками и модулями"),
        ("Сборка сводной таблицы для создания занятий", "Настройка связей между потоками и уровнями"),
        ("Создание занятий и домашних заданий", "Сборка сводной таблицы для создания занятий"),
        ("Создание связей между уроками и модулями", "Создание занятий и домашних заданий"),
        ("Создание связей продукт-урок-уровень", "Создание занятий и домашних заданий"),
        ("Наполнение контентом занятий и домашних заданий", "Создание связей продукт-урок-уровень"),
        ("Постконтроль созданных уроков", "Создание связей продукт-урок-уровень")
    ]

    # Добавляем зависимости
    for task_name, predecessor_name in dependencies:
        add_task_template_dependency(task_ids[task_name], task_ids[predecessor_name])

    print(f"Шаблон 'ОК 1 поток' успешно создан (ID: {template_id})")

    # Здесь можно добавить другие шаблоны

    return True


if __name__ == "__main__":
    # Инициализируем базу данных
    init_db()
    # Создаем шаблоны проектов
    seed_project_templates()